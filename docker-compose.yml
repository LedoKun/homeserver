version: '3.8'

services:
  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "13378:13378"
    volumes:
      - /srv/caddy-dashboard/Caddyfile:/etc/caddy/Caddyfile
      - /srv/caddy-dashboard/caddy/data:/data
      - /srv/caddy-dashboard/caddy/config:/config
      - /srv/caddy-dashboard/www:/usr/share/caddy
      - /var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock:z
    cap_add:
      - NET_ADMIN
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
    networks:
      - caddy-public
      - caddy-host
    dns:
      - 100.100.100.100

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/prowlarr:/config
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    networks:
      - caddy-public

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/sonarr:/config
      - ${MEDIA_ROOT}/TV:/tv
      - ${DOWNLOAD_ROOT}:/downloads
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    networks:
      - caddy-public

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/radarr:/config
      - ${MEDIA_ROOT}/Movies:/movies
      - ${DOWNLOAD_ROOT}:/downloads
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    networks:
      - caddy-public

  # bazarr:
  #   image: lscr.io/linuxserver/bazarr:latest
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${CONFIG_ROOT}/bazarr:/config
  #     - ${MEDIA_ROOT}/Movies:/movies
  #     - ${MEDIA_ROOT}/TV:/tv
  #     - ${DOWNLOAD_ROOT}:/downloads
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.hostname == baam
  #   networks:
  #     - caddy-public

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/qbittorrent:/config
      - ${DOWNLOAD_ROOT}:/downloads
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    ports:
      - "${QBITTORRENT_PORT}:${QBITTORRENT_PORT}"
      - "${QBITTORRENT_PORT}:${QBITTORRENT_PORT}/udp"
    networks:
      - caddy-public

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    environment:
      - PUID=${PUID}
      - PGID=${JELLYFIN_RENDER_GROUP}
      - TZ=${TZ}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_IP}
      - DOCKER_MODS=${JELLYFIN_DOCKER_MODS}
    volumes:
      - ${CONFIG_ROOT}/jellyfin:/config
      - ${MEDIA_ROOT}/TV:/data/tvshows
      - ${MEDIA_ROOT}/Anime:/data/anime
      - ${MEDIA_ROOT}/Movies:/data/movies
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    devices:
      - /dev/dri:/dev/dri
    networks:
      - caddy-public

  filebrowser:
    image: filebrowser/filebrowser
    user: ${PUID}:${PGID}
    ports:
      - "8088:80"
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/filebrowser/filebrowser.json:/.filebrowser.json
      - ${CONFIG_ROOT}/filebrowser/database.db:/database.db
      - ${DOWNLOAD_ROOT}:/srv
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    networks:
      - caddy-public

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    user: ${PUID}:${PGID}
    environment:
      - TZ=${TZ}
    volumes:
      - ${MEDIA_ROOT}/Audiobooks:/audiobooks
      - ${MEDIA_ROOT}/Podcasts:/podcasts
      - ${CONFIG_ROOT}/audiobookshelf/config:/config
      - ${CONFIG_ROOT}/audiobookshelf/metadata:/metadata
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    networks:
      - caddy-public

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/readarr:/config
      - ${DOWNLOAD_ROOT}:/downloads
      - ${MEDIA_ROOT}/Books:/books
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    networks:
      - caddy-public

  boinc:
    image: lscr.io/linuxserver/boinc:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SUBFOLDER=/boinc/
    volumes:
      - ${BOINC_ROOT}:/config
      - /var/run/docker.sock:/var/run/docker.sock:z
    privileged: true
    devices:
      - /dev/dri:/dev/dri
    deploy:
      placement:
        constraints:
          - node.hostname == ledokun
    networks:
      - caddy-public

  scrutiny:
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
    volumes:
      - /run/udev:/run/udev:ro
      - ${SCRUTINY_PATH}:/opt/scrutiny/config
      - ${SCRUTINY_PATH}/influxdb2:/opt/scrutiny/influxdb
    devices:
      - "/dev/sda"
      - "/dev/sdb"
      - "/dev/sdc"
      - "/dev/sdd"
    deploy:
      placement:
        constraints:
          - node.hostname == baam
    networks:
      - caddy-public

networks:
  caddy-public:
    external: true
  caddy-host:
    external:
      name: "host"
